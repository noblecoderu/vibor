/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
import * as import0 from './vibor.component';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import13 from '../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import16 from '../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import19 from '../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import20 from '../node_modules/@angular/forms/src/directives/validators.ngfactory';
import * as import21 from '../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import22 from '../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import23 from '@angular/common/src/pipes/number_pipe';
export declare class Wrapper_ViborComponent {
    _eventHandler: Function;
    context: import0.ViborComponent;
    _changed: boolean;
    _changes: {
        [key: string]: any;
    };
    _expr_0: any;
    _expr_1: any;
    _expr_2: any;
    _expr_3: any;
    _expr_4: any;
    _expr_5: any;
    _expr_6: any;
    _expr_7: any;
    _expr_8: any;
    _expr_9: any;
    _expr_10: any;
    _expr_11: any;
    _expr_12: any;
    _expr_13: any;
    _expr_14: any;
    _expr_15: any;
    _expr_16: any;
    _expr_17: any;
    subscription0: any;
    subscription1: any;
    constructor(p0: any);
    ngOnDetach(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any): void;
    ngOnDestroy(): void;
    check_multiple(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_canClean(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_multipleLimit(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_placeholder(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_required(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_disabled(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_listFormatter(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_dropdownFormatter(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_viewProperty(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_modelProperty(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_preloadProperty(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_preloadField(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_searchProperty(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_dataList(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_onlyEmitter(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check__model(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_newMessage(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_CreateNew(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    ngDoCheck(view: import2.AppView<any>, el: any, throwOnChange: boolean): boolean;
    checkHost(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any, throwOnChange: boolean): void;
    handleEvent(eventName: string, $event: any): boolean;
    subscribe(view: import2.AppView<any>, _eventHandler: any, emit0: boolean, emit1: boolean): void;
}
export declare const ViborComponentNgFactory: import8.ComponentFactory<import0.ViborComponent>;
export declare class View_ViborComponent0 extends import2.AppView<import0.ViborComponent> {
    _text_0: any;
    _el_1: any;
    _text_2: any;
    _el_3: any;
    _text_4: any;
    _anchor_5: any;
    _vc_5: import11.ViewContainer;
    _TemplateRef_5_5: any;
    _NgFor_5_6: import16.Wrapper_NgFor;
    _text_6: any;
    _el_7: any;
    _text_8: any;
    _el_9: any;
    _DefaultValueAccessor_9_3: import19.Wrapper_DefaultValueAccessor;
    _RequiredValidator_9_4: import20.Wrapper_RequiredValidator;
    _NG_VALIDATORS_9_5: any[];
    _NG_VALUE_ACCESSOR_9_6: any[];
    _NgModel_9_7: import21.Wrapper_NgModel;
    _NgControl_9_8: any;
    _NgControlStatus_9_9: import22.Wrapper_NgControlStatus;
    _text_10: any;
    _text_11: any;
    _el_12: any;
    _text_13: any;
    _el_14: any;
    _text_15: any;
    _text_16: any;
    _text_17: any;
    _text_18: any;
    _anchor_19: any;
    _vc_19: import11.ViewContainer;
    _TemplateRef_19_5: any;
    _NgIf_19_6: import13.Wrapper_NgIf;
    _text_20: any;
    _expr_34: any;
    _expr_35: any;
    _expr_36: any;
    _pipe_number_0: import23.DecimalPipe;
    constructor(viewUtils: import3.ViewUtils, parentView: import2.AppView<any>, parentIndex: number, parentElement: any);
    createInternal(rootSelector: string): import8.ComponentRef<any>;
    injectorGetInternal(token: any, requestNodeIndex: number, notFoundResult: any): any;
    detectChangesInternal(throwOnChange: boolean): void;
    destroyInternal(): void;
    createEmbeddedViewInternal(nodeIndex: number): import2.AppView<any>;
    handleEvent_9(eventName: string, $event: any): boolean;
}
