[{"__symbolic":"module","version":3,"metadata":{"ViborComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"vibor","template":"   <div class=\"select-search\">         <ul class=\"select-search-list\">             <li class=\"select-search-list-item select-search-list-item_selection\"                 *ngFor=\"let item of output; let $index=index; let $last=last; trackBy: TrackByFn;\"                 [class.focused]=\"backspaceFocus && last\"                 (click)=\"!disabled && removeOne($index)\"                 [innerHTML]=\"getListFormatted(item)\">             </li>             <li class=\"select-search-list-item select-search-list-item_input\"                 [class.select-search-list-item_hide]=\"InputHide\">                 <input autocomplete=\"off\"                        #inputControl=\"ngModel\"                         [disabled]=\"disabled\"                        [required]=\"required\"                        [(ngModel)]=\"query\"                        [placeholder]=\"output.length == 0 ? placeholder : ''\"                        (input)=\"updateOptionsInDelay()\"                        (blur)=\"hideDropdownList()\"                        (focus)=\"showDropdownList()\"                        (keydown)=\"keyDown($event)\"/>             </li>             <li class=\"select-search-list-item\" [hidden]=\"!dataListSub || dataListSub.closed\">                 <div class=\"select-search-list-item_loader\"></div>             </li>              </ul>     </div>     <div class=\"select-dropdown\" *ngIf=\"isOpen\">         <ul class=\"select-dropdown-optgroup\">             <li class=\"select-dropdown-optgroup-option\"                 *ngFor=\"let option of Options; let i=index\"                 (mousedown)=\"selectOne($event, option)\"                 [class.active]=\"i === selectorPosition\"                 [innerHTML]=\"getDropdownFormatted(option)\">             </li>             <li class=\"select-dropdown-optgroup-option loader\" *ngIf=\"dataListSub && !dataListSub.closed\">                 Загрузка             </li>             <li class=\"select-dropdown-optgroup-option loader\"                 (mousedown)=\"selectOne($event, CreateNew(query));\"                 *ngIf=\"newMessage && (!dataListSub || dataListSub.closed) && Options.length == 0\">                 {{ newMessage }}             </li>         </ul>         <div class=\"select-dropdown-pager\" *ngIf=\"CurrentCache && CurrentCache.countPages > 1\">             <p class=\"select-dropdown-pager-page\">                 {{ CurrentCache.currentPage | number }} / {{ CurrentCache.countPages | number }}             </p>             <button                 class=\"select-dropdown-pager-loadmore\"                     *ngIf=\"CurrentCache.countPages > 1 && CurrentCache.currentPage < CurrentCache.countPages\"                     (mousedown)=\"nextPage($event)\">                 Загрузить ещё             </button>         </div>     </div>      ","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ViborComponent"},"multi":true}]}]}],"members":{"inputControl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputControl"]}]}],"multiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"canClean":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"multipleLimit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"required":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"listFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dropdownFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"viewProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"modelProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onlyEmitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"_model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["ngModel"]}]}],"_ngChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["ngChange"]}]}],"changeFullModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["changeFullModel"]}]}],"newMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"CreateNew":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"TrackByFn":[{"__symbolic":"method"}],"showDropdownList":[{"__symbolic":"method"}],"hideDropdownList":[{"__symbolic":"method"}],"updateOptions":[{"__symbolic":"method"}],"updateOptionsInDelay":[{"__symbolic":"method"}],"focusSelectedOption":[{"__symbolic":"method"}],"keyDown":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"clearProperty":[{"__symbolic":"method"}],"selectOne":[{"__symbolic":"method"}],"removeOne":[{"__symbolic":"method"}],"getListFormatted":[{"__symbolic":"method"}],"getDropdownFormatted":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"ViborComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"vibor","template":"   <div class=\"select-search\">         <ul class=\"select-search-list\">             <li class=\"select-search-list-item select-search-list-item_selection\"                 *ngFor=\"let item of output; let $index=index; let $last=last; trackBy: TrackByFn;\"                 [class.focused]=\"backspaceFocus && last\"                 (click)=\"!disabled && removeOne($index)\"                 [innerHTML]=\"getListFormatted(item)\">             </li>             <li class=\"select-search-list-item select-search-list-item_input\"                 [class.select-search-list-item_hide]=\"InputHide\">                 <input autocomplete=\"off\"                        #inputControl=\"ngModel\"                         [disabled]=\"disabled\"                        [required]=\"required\"                        [(ngModel)]=\"query\"                        [placeholder]=\"output.length == 0 ? placeholder : ''\"                        (input)=\"updateOptionsInDelay()\"                        (blur)=\"hideDropdownList()\"                        (focus)=\"showDropdownList()\"                        (keydown)=\"keyDown($event)\"/>             </li>             <li class=\"select-search-list-item\" [hidden]=\"!dataListSub || dataListSub.closed\">                 <div class=\"select-search-list-item_loader\"></div>             </li>              </ul>     </div>     <div class=\"select-dropdown\" *ngIf=\"isOpen\">         <ul class=\"select-dropdown-optgroup\">             <li class=\"select-dropdown-optgroup-option\"                 *ngFor=\"let option of Options; let i=index\"                 (mousedown)=\"selectOne($event, option)\"                 [class.active]=\"i === selectorPosition\"                 [innerHTML]=\"getDropdownFormatted(option)\">             </li>             <li class=\"select-dropdown-optgroup-option loader\" *ngIf=\"dataListSub && !dataListSub.closed\">                 Загрузка             </li>             <li class=\"select-dropdown-optgroup-option loader\"                 (mousedown)=\"selectOne($event, CreateNew(query));\"                 *ngIf=\"newMessage && (!dataListSub || dataListSub.closed) && Options.length == 0\">                 {{ newMessage }}             </li>         </ul>         <div class=\"select-dropdown-pager\" *ngIf=\"CurrentCache && CurrentCache.countPages > 1\">             <p class=\"select-dropdown-pager-page\">                 {{ CurrentCache.currentPage | number }} / {{ CurrentCache.countPages | number }}             </p>             <button                 class=\"select-dropdown-pager-loadmore\"                     *ngIf=\"CurrentCache.countPages > 1 && CurrentCache.currentPage < CurrentCache.countPages\"                     (mousedown)=\"nextPage($event)\">                 Загрузить ещё             </button>         </div>     </div>      ","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ViborComponent"},"multi":true}]}]}],"members":{"inputControl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputControl"]}]}],"multiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"canClean":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"multipleLimit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"required":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"listFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dropdownFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"viewProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"modelProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onlyEmitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"_model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["ngModel"]}]}],"_ngChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["ngChange"]}]}],"changeFullModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["changeFullModel"]}]}],"newMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"CreateNew":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"TrackByFn":[{"__symbolic":"method"}],"showDropdownList":[{"__symbolic":"method"}],"hideDropdownList":[{"__symbolic":"method"}],"updateOptions":[{"__symbolic":"method"}],"updateOptionsInDelay":[{"__symbolic":"method"}],"focusSelectedOption":[{"__symbolic":"method"}],"keyDown":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"clearProperty":[{"__symbolic":"method"}],"selectOne":[{"__symbolic":"method"}],"removeOne":[{"__symbolic":"method"}],"getListFormatted":[{"__symbolic":"method"}],"getDropdownFormatted":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}]}}}}]