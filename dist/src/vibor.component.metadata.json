[{"__symbolic":"module","version":3,"metadata":{"ViborComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"vibor","template":"\n  <ng-content></ng-content>\n\n  <div class=\"select-search\" (click)=\"showDropdownList($event);\">\n      <ul class=\"select-search-list\">\n            <ng-container *ngIf=\"multiple || !isOpen\">\n              <ng-container *ngIf=\"!SelectedTemplate; else selectedT\">\n                  <li class=\"select-search-list-item select-search-list-item_selection\"\n                      *ngFor=\"let item of output; let $index=index; let $last=last; trackBy: TrackByFn;\"\n                      [class.focused]=\"backspaceFocus && last\">\n                      <div [innerHTML]=\"getListFormatted(item)\"></div>\n                      <a class=\"select-search-list-item_remove\" *ngIf=\"allowReset\" (click)=\"!disabled && removeOne($index, $event)\"></a>\n                  </li>\n              </ng-container>\n\n              <ng-template #selectedT>\n                  <li class=\"select-search-list-item select-search-list-item_selection\"\n                      *ngFor=\"let item of output; let $index=index; let $last=last; trackBy: TrackByFn;\"\n                      [class.focused]=\"backspaceFocus && last\">\n                        <ng-container *ngTemplateOutlet=\"SelectedTemplate; context: {item: item}\"></ng-container>\n                        <a class=\"select-search-list-item_remove\"\n                           *ngIf=\"allowReset && !disabled\"\n                           (click)=\"!disabled && removeOne($index, $event)\">\n                        </a>\n                  </li>\n              </ng-template>\n            </ng-container>\n\n            <li class=\"select-search-list-item select-search-list-item_input\"\n                [class.select-search-list-item_hide]=\"InputHide\">\n                <input autocomplete=\"off\"\n                       #inputControl=\"ngModel\"\n                       [name]=\"name\"\n                       [disabled]=\"disabled\"\n                       [(ngModel)]=\"query\"\n                       [placeholder]=\"output.length == 0 ? placeholder : ''\"\n                       (input)=\"updateOptionsInDelay()\"\n                       (blur)=\"hideDropdownListWithDelay()\"\n                       (keydown)=\"keyDown($event)\"/>\n            </li>\n            <li class=\"select-search-list-item select-search-list-item_loader-center\" [hidden]=\"!dataListSub || dataListSub.closed\">\n                <div class=\"select-search-list-item_loader\"></div>\n            </li>\n\n            <span class=\"arrow\" (click)=\"toggleDropdown($event)\">\n            </span>\n        </ul>\n    </div>\n\n    <div class=\"select-dropdown\" *ngIf=\"isOpen\">\n        <ul class=\"select-dropdown-optgroup\">\n            <ng-container *ngIf=\"!DropdownTemplate; else dropdownT\">\n                <li class=\"select-dropdown-optgroup-option\"\n                    *ngFor=\"let option of Options; let i=index\"\n                    (mousedown)=\"selectOne($event, option)\"\n                    [class.active]=\"i === selectorPosition\"\n                    [innerHTML]=\"getDropdownFormatted(option)\">\n                </li>\n            </ng-container>\n\n            <ng-template #dropdownT>\n                <li class=\"select-dropdown-optgroup-option\"\n                    *ngFor=\"let option of Options; let i=index\"\n                    (mousedown)=\"selectOne($event, option)\"\n                    [class.active]=\"i === selectorPosition\">\n                    <ng-container *ngTemplateOutlet=\"DropdownTemplate; context: {item: option}\"></ng-container>\n                </li>\n            </ng-template>\n\n            <li class=\"select-dropdown-optgroup-option loader\" *ngIf=\"dataListSub && !dataListSub.closed\">\n                Загрузка\n            </li>\n            <li class=\"select-dropdown-optgroup-option loader\"\n                (mousedown)=\"AddNewObject(CreateNew(query));\"\n                [class.active]=\"selectorPosition === Options.length\"\n                *ngIf=\"ShowNew\">\n\n                <ng-container *ngIf=\"createTemplate; else templateWithMessage\">\n                    <ng-container *ngTemplateOutlet=\"createTemplate.templateRef; context: {query: query}\"></ng-container>\n                </ng-container>\n\n                <ng-template #templateWithMessage>\n                    {{ newMessage }}\n                </ng-template>\n            </li>\n            <li class=\"select-dropdown-optgroup-option loader\" *ngIf=\"ShowEmpty\">\n                Пусто\n            </li>\n        </ul>\n        <div class=\"select-dropdown-pager\" *ngIf=\"currentCache && currentCache.countPages > 1\">\n            <p class=\"select-dropdown-pager-page\">\n                {{ currentCache.currentPage | number }} / {{ currentCache.countPages | number }}\n            </p>\n            <button\n                class=\"select-dropdown-pager-loadmore\"\n                    *ngIf=\"currentCache.countPages > 1 && currentCache.currentPage < currentCache.countPages\"\n                    (mousedown)=\"nextPage($event)\">\n                Загрузить ещё\n            </button>\n        </div>\n    </div>","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ViborComponent"},"multi":true}]}]}],"members":{"inputControl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputControl"]}]}],"multiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"multipleLimit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"countOnPage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"required":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"allowReset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"bothTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborBothDirective"}]}]}],"dropdownTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborDropdownDirective"}]}]}],"selectedTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborSelectedDirective"}]}]}],"createTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborCreateDirective"}]}]}],"listFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dropdownFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"viewProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"modelProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"excludeList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"additionalFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onlyEmitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"changeFullModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["changeFullModel"]}]}],"newMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"CreateNew":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"TrackByFn":[{"__symbolic":"method"}],"showDropdownList":[{"__symbolic":"method"}],"hideDropdownList":[{"__symbolic":"method"}],"hideDropdownListWithDelay":[{"__symbolic":"method"}],"toggleDropdown":[{"__symbolic":"method"}],"updateOptions":[{"__symbolic":"method"}],"updateOptionsInDelay":[{"__symbolic":"method"}],"focusSelectedOption":[{"__symbolic":"method"}],"keyDown":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"clearProperty":[{"__symbolic":"method"}],"selectOne":[{"__symbolic":"method"}],"removeOne":[{"__symbolic":"method"}],"getListFormatted":[{"__symbolic":"method"}],"getDropdownFormatted":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"GetCache":[{"__symbolic":"method"}],"AddNewObject":[{"__symbolic":"method"}],"SetNewObject":[{"__symbolic":"method"}]}},"CacheInfo":{"__symbolic":"interface"}}},{"__symbolic":"module","version":1,"metadata":{"ViborComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"vibor","template":"\n  <ng-content></ng-content>\n\n  <div class=\"select-search\" (click)=\"showDropdownList($event);\">\n      <ul class=\"select-search-list\">\n            <ng-container *ngIf=\"multiple || !isOpen\">\n              <ng-container *ngIf=\"!SelectedTemplate; else selectedT\">\n                  <li class=\"select-search-list-item select-search-list-item_selection\"\n                      *ngFor=\"let item of output; let $index=index; let $last=last; trackBy: TrackByFn;\"\n                      [class.focused]=\"backspaceFocus && last\">\n                      <div [innerHTML]=\"getListFormatted(item)\"></div>\n                      <a class=\"select-search-list-item_remove\" *ngIf=\"allowReset\" (click)=\"!disabled && removeOne($index, $event)\"></a>\n                  </li>\n              </ng-container>\n\n              <ng-template #selectedT>\n                  <li class=\"select-search-list-item select-search-list-item_selection\"\n                      *ngFor=\"let item of output; let $index=index; let $last=last; trackBy: TrackByFn;\"\n                      [class.focused]=\"backspaceFocus && last\">\n                        <ng-container *ngTemplateOutlet=\"SelectedTemplate; context: {item: item}\"></ng-container>\n                        <a class=\"select-search-list-item_remove\"\n                           *ngIf=\"allowReset && !disabled\"\n                           (click)=\"!disabled && removeOne($index, $event)\">\n                        </a>\n                  </li>\n              </ng-template>\n            </ng-container>\n\n            <li class=\"select-search-list-item select-search-list-item_input\"\n                [class.select-search-list-item_hide]=\"InputHide\">\n                <input autocomplete=\"off\"\n                       #inputControl=\"ngModel\"\n                       [name]=\"name\"\n                       [disabled]=\"disabled\"\n                       [(ngModel)]=\"query\"\n                       [placeholder]=\"output.length == 0 ? placeholder : ''\"\n                       (input)=\"updateOptionsInDelay()\"\n                       (blur)=\"hideDropdownListWithDelay()\"\n                       (keydown)=\"keyDown($event)\"/>\n            </li>\n            <li class=\"select-search-list-item select-search-list-item_loader-center\" [hidden]=\"!dataListSub || dataListSub.closed\">\n                <div class=\"select-search-list-item_loader\"></div>\n            </li>\n\n            <span class=\"arrow\" (click)=\"toggleDropdown($event)\">\n            </span>\n        </ul>\n    </div>\n\n    <div class=\"select-dropdown\" *ngIf=\"isOpen\">\n        <ul class=\"select-dropdown-optgroup\">\n            <ng-container *ngIf=\"!DropdownTemplate; else dropdownT\">\n                <li class=\"select-dropdown-optgroup-option\"\n                    *ngFor=\"let option of Options; let i=index\"\n                    (mousedown)=\"selectOne($event, option)\"\n                    [class.active]=\"i === selectorPosition\"\n                    [innerHTML]=\"getDropdownFormatted(option)\">\n                </li>\n            </ng-container>\n\n            <ng-template #dropdownT>\n                <li class=\"select-dropdown-optgroup-option\"\n                    *ngFor=\"let option of Options; let i=index\"\n                    (mousedown)=\"selectOne($event, option)\"\n                    [class.active]=\"i === selectorPosition\">\n                    <ng-container *ngTemplateOutlet=\"DropdownTemplate; context: {item: option}\"></ng-container>\n                </li>\n            </ng-template>\n\n            <li class=\"select-dropdown-optgroup-option loader\" *ngIf=\"dataListSub && !dataListSub.closed\">\n                Загрузка\n            </li>\n            <li class=\"select-dropdown-optgroup-option loader\"\n                (mousedown)=\"AddNewObject(CreateNew(query));\"\n                [class.active]=\"selectorPosition === Options.length\"\n                *ngIf=\"ShowNew\">\n\n                <ng-container *ngIf=\"createTemplate; else templateWithMessage\">\n                    <ng-container *ngTemplateOutlet=\"createTemplate.templateRef; context: {query: query}\"></ng-container>\n                </ng-container>\n\n                <ng-template #templateWithMessage>\n                    {{ newMessage }}\n                </ng-template>\n            </li>\n            <li class=\"select-dropdown-optgroup-option loader\" *ngIf=\"ShowEmpty\">\n                Пусто\n            </li>\n        </ul>\n        <div class=\"select-dropdown-pager\" *ngIf=\"currentCache && currentCache.countPages > 1\">\n            <p class=\"select-dropdown-pager-page\">\n                {{ currentCache.currentPage | number }} / {{ currentCache.countPages | number }}\n            </p>\n            <button\n                class=\"select-dropdown-pager-loadmore\"\n                    *ngIf=\"currentCache.countPages > 1 && currentCache.currentPage < currentCache.countPages\"\n                    (mousedown)=\"nextPage($event)\">\n                Загрузить ещё\n            </button>\n        </div>\n    </div>","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ViborComponent"},"multi":true}]}]}],"members":{"inputControl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputControl"]}]}],"multiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"multipleLimit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"countOnPage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"required":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"allowReset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"bothTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborBothDirective"}]}]}],"dropdownTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborDropdownDirective"}]}]}],"selectedTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborSelectedDirective"}]}]}],"createTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"./vibor.template.directive","name":"ViborCreateDirective"}]}]}],"listFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dropdownFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"viewProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"modelProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"preloadField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"excludeList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"additionalFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onlyEmitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"changeFullModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["changeFullModel"]}]}],"newMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"CreateNew":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"TrackByFn":[{"__symbolic":"method"}],"showDropdownList":[{"__symbolic":"method"}],"hideDropdownList":[{"__symbolic":"method"}],"hideDropdownListWithDelay":[{"__symbolic":"method"}],"toggleDropdown":[{"__symbolic":"method"}],"updateOptions":[{"__symbolic":"method"}],"updateOptionsInDelay":[{"__symbolic":"method"}],"focusSelectedOption":[{"__symbolic":"method"}],"keyDown":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"clearProperty":[{"__symbolic":"method"}],"selectOne":[{"__symbolic":"method"}],"removeOne":[{"__symbolic":"method"}],"getListFormatted":[{"__symbolic":"method"}],"getDropdownFormatted":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"GetCache":[{"__symbolic":"method"}],"AddNewObject":[{"__symbolic":"method"}],"SetNewObject":[{"__symbolic":"method"}]}},"CacheInfo":{"__symbolic":"interface"}}}]